#include <gtest/gtest.h>
#include "../bigint.h"

TEST(OutputTests, TestOutputStream) {
  auto ensure_correct_output = [](const std::string & input, const std::string & expected){
    EXPECT_NO_THROW(bigint(input)); // should initialize ok
    std::stringstream ss;
    auto b = bigint(input);
    ss << b;

    EXPECT_EQ(expected, ss.str());
  };

  ensure_correct_output(/*input=*/"-0", /*expected=*/"0");
  ensure_correct_output(/*input=*/"+0", /*expected=*/"0");
  ensure_correct_output(/*input=*/"0000000000000000000", /*expected=*/"0");
  ensure_correct_output(/*input=*/"-0000000000000000000", /*expected=*/"0");
  ensure_correct_output(/*input=*/"-100500", /*expected=*/"-100500");
  ensure_correct_output(/*input=*/"-1234123500", /*expected=*/"-1234123500");
  ensure_correct_output(/*input=*/"-12345678901234567", /*expected=*/"-12345678901234567");
  ensure_correct_output(/*input=*/"100500", /*expected=*/"100500");
  ensure_correct_output("10000000000000000000000000"
                           "000000000000000000000000000000000"
                           "000000000000000000000000000000000"
                           "000000",
                           "10000000000000000000000000"
                           "000000000000000000000000000000000"
                           "000000000000000000000000000000000"
                           "000000");
  ensure_correct_output("1000000000000000000000000"
                         "000000000000000000000000000000000"
                         "000000000000000000000000000000000"
                         "000000",
                         "1000000000000000000000000"
                         "000000000000000000000000000000000"
                         "000000000000000000000000000000000"
                         "000000");
    ensure_correct_output("-1000000000000000000000000"
                         "000000000000000000000000000000000"
                         "000000000000000000000000000000000"
                         "000000",
                         "-1000000000000000000000000"
                         "000000000000000000000000000000000"
                         "000000000000000000000000000000000"
                         "000000");
   ensure_correct_output(   "123456789111213141516171819202122232425262728293031",
                         "123456789111213141516171819202122232425262728293031");
    ensure_correct_output(  "-1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
                          "-1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000");


  ensure_correct_output(/*input=*/"-10000005550606049495886868558858484939393002500",
                        /*expected=*/"-10000005550606049495886868558858484939393002500");
  ensure_correct_output(/*input=*/"10000005550606049495886868558858484939393002500", "10000005550606049495886868558858484939393002500");
  ensure_correct_output(/*input=*/"1000005550606049495886868558858484939393002500", "1000005550606049495886868558858484939393002500");

}
